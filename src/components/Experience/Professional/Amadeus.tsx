import React from "react";
import styles from "../../../style";
import { Collapsible } from '../../Reusables/Collapsible';
import { ProjectDesc } from "../../Reusables/ProjectDesc";
import { CarouselCustom } from "../../Reusables/CarouselCustom";

function Amadeus() {
    return (
       <>
       <div className="py-3">
            From April 2023 to October 2023, I worked with Amadeus IT a Software Engineer.
            <br /> <br />
            I was in charge of developing two powerful internal tools for use by the company, and as such, 
            I was given a lot of freedom to develop them as I saw fit as long as they met the requirements.
            I delivered both projects on time and to a high standard, and I hosted several demos and QnAs' to
            give guidance on the proper use of the tools.
            <br />
            These tools saved several hundred hours of manual labour and were used by several teams across the company.
        </div>
        <ProjectDesc title="Specification Repair Tool" content={
            <>
            <CarouselCustom slide={true} className={styles.carouselStyle} imgList={["Professional/Amadeus/tool1.jpg", "Professional/Amadeus/tool1a.jpg", "Professional/Amadeus/tool1b.jpg"]}/>
            <div className="prose">
                <h2>Context</h2>
                I was asked to devise a tool that could analyse outdated written HTML documents that contained several hyperlinks, and to update these hyperlinks to their new locations.
                There are thousands of these documents, so doing this by hand would take hundreds of man-hours. The tool was written with Python and used a certain REST API to access and update the documents
                (kept confidential for security reasons).
                <br />
                The tool also interfaced with a web browser using Selenium to allow the user to view the documents and the changes made to them in real time.
                <h2>Implementation</h2>
                The tool had to repair 3 types of links:
                <ul className="pl-8 pb-2">
                    <li className="list-disc">Existing broken hyperlinks</li>
                    <li className="list-disc">Inserting new links between &lt;&gt; and  &lt;&lt;&gt;&gt; identifiers.</li>
                    <li className="list-disc">Replacing plaintext that matches a predefined pattern with a link to their correct page.</li>
                </ul>
                The tool used a combination of BeautifulSoup, Regex, and propietery techniques to identify and repair the links, and the tool was designed to be as modular as possible to allow for easy expansion in the future.
                This was accomplished by not hardcoding variables and instead allowing a user-configurable file to be used to define the patterns and links to be used. 
                <br />
                This tool was designed with the intention of being used by non-developers, so it was designed to be as user-friendly as possible. As the tool had to account for human error (in the form of typos and mismatched names), several techniques
                such as fuzzy matching were incorporated to ensure that the tool could repair as many links as possible. In the event the tool was not able to automatically resolve a link, the user was given the option to manually
                resolve the link themselves.
                <br /> <br />
                The tool also used a propietery update system to ensure that the tool was always up to date with the latest version, and to allow for easy updates in the future. This is crucial
                as the tool is used by several teams across the company, so asking them to manually update the tool would be unfeasable.
            </div>
            </>
        } badges={ ["Webscraping", "HTML", "Python", "UI", "REST API", "Selenium"]}/>
        <ProjectDesc title="Java Code Analyser" content={
            <>
            <CarouselCustom slide={true} className={styles.carouselStyle} imgList={["Professional/Amadeus/tool2.jpg", "Professional/Amadeus/tool2a.jpg"]}/>
            <div className="prose">
                <h2>Context</h2>
                I was asked to devise a tool that could analyse an Amadeus product written in Java to extract and tabulate information that is crucial to the end user.
                Doing this by hand can require hours of manual effort, and there are hundreds of tables that need to be generated. These tables are usually generated by non-developers
                who are not familiar with Java, meaning they were sometimes blocked by needing to wait for a developer to aid them. My tool was to be used by these non-developers, and so it 
                was designed to be as user-friendly as possible.
                <h2>Implementation</h2>
                As the tool was analysing a codebase written by other employees, it had to account for inconsistencies in the codebase. For example, crucial files were placed in slightly
                different locations, and so a lot of techniques were used to mitigate this.
                <br /> <br />
                Again, a combination of Regex and propietery techniques were used to extract the information from the codebase, and the tool was designed to be as modular as possible to allow for easy expansion in the future.
                The tool also had a more refined version of the update feature used in the Specification Repair Tool.
            </div>
            </>
        } badges={ ["Java", "Code Parsing", "Python", "UI", "Automation"]}/>
        </>
    );
}


export default Amadeus;